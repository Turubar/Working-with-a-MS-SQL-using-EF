//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("EmployeeDatabaseModel", "FK__Company_p__id_co__571DF1D5", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Accountants_Tools.entity_framework.Company), "Company_positions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Accountants_Tools.entity_framework.Company_positions), true)]
[assembly: EdmRelationshipAttribute("EmployeeDatabaseModel", "FK__Employmen__id_po__5AEE82B9", "Company_positions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Accountants_Tools.entity_framework.Company_positions), "Employment_contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Accountants_Tools.entity_framework.Employment_contracts), true)]
[assembly: EdmRelationshipAttribute("EmployeeDatabaseModel", "FK__Employmen__id_em__59FA5E80", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Accountants_Tools.entity_framework.Employee), "Employment_contracts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Accountants_Tools.entity_framework.Employment_contracts), true)]

#endregion

namespace Accountants_Tools.entity_framework
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class EmployeeDatabaseEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект EmployeeDatabaseEntities, используя строку соединения из раздела "EmployeeDatabaseEntities" файла конфигурации приложения.
        /// </summary>
        public EmployeeDatabaseEntities() : base("name=EmployeeDatabaseEntities", "EmployeeDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта EmployeeDatabaseEntities.
        /// </summary>
        public EmployeeDatabaseEntities(string connectionString) : base(connectionString, "EmployeeDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта EmployeeDatabaseEntities.
        /// </summary>
        public EmployeeDatabaseEntities(EntityConnection connection) : base(connection, "EmployeeDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Company> Company
        {
            get
            {
                if ((_Company == null))
                {
                    _Company = base.CreateObjectSet<Company>("Company");
                }
                return _Company;
            }
        }
        private ObjectSet<Company> _Company;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Company_positions> Company_positions
        {
            get
            {
                if ((_Company_positions == null))
                {
                    _Company_positions = base.CreateObjectSet<Company_positions>("Company_positions");
                }
                return _Company_positions;
            }
        }
        private ObjectSet<Company_positions> _Company_positions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Employment_contracts> Employment_contracts
        {
            get
            {
                if ((_Employment_contracts == null))
                {
                    _Employment_contracts = base.CreateObjectSet<Employment_contracts>("Employment_contracts");
                }
                return _Employment_contracts;
            }
        }
        private ObjectSet<Employment_contracts> _Employment_contracts;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Company. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCompany(Company company)
        {
            base.AddObject("Company", company);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Company_positions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCompany_positions(Company_positions company_positions)
        {
            base.AddObject("Company_positions", company_positions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Employee. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Employment_contracts. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEmployment_contracts(Employment_contracts employment_contracts)
        {
            base.AddObject("Employment_contracts", employment_contracts);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeDatabaseModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Company.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="company_name">Исходное значение свойства company_name.</param>
        /// <param name="last_name_owner">Исходное значение свойства last_name_owner.</param>
        /// <param name="first_name_owner">Исходное значение свойства first_name_owner.</param>
        /// <param name="middle_name_owner">Исходное значение свойства middle_name_owner.</param>
        /// <param name="date_of_creation">Исходное значение свойства date_of_creation.</param>
        public static Company CreateCompany(global::System.Int64 id, global::System.String company_name, global::System.String last_name_owner, global::System.String first_name_owner, global::System.String middle_name_owner, global::System.DateTime date_of_creation)
        {
            Company company = new Company();
            company.id = id;
            company.company_name = company_name;
            company.last_name_owner = last_name_owner;
            company.first_name_owner = first_name_owner;
            company.middle_name_owner = middle_name_owner;
            company.date_of_creation = date_of_creation;
            return company;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String company_name
        {
            get
            {
                return _company_name;
            }
            set
            {
                Oncompany_nameChanging(value);
                ReportPropertyChanging("company_name");
                _company_name = StructuralObject.SetValidValue(value, false, "company_name");
                ReportPropertyChanged("company_name");
                Oncompany_nameChanged();
            }
        }
        private global::System.String _company_name;
        partial void Oncompany_nameChanging(global::System.String value);
        partial void Oncompany_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name_owner
        {
            get
            {
                return _last_name_owner;
            }
            set
            {
                Onlast_name_ownerChanging(value);
                ReportPropertyChanging("last_name_owner");
                _last_name_owner = StructuralObject.SetValidValue(value, false, "last_name_owner");
                ReportPropertyChanged("last_name_owner");
                Onlast_name_ownerChanged();
            }
        }
        private global::System.String _last_name_owner;
        partial void Onlast_name_ownerChanging(global::System.String value);
        partial void Onlast_name_ownerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name_owner
        {
            get
            {
                return _first_name_owner;
            }
            set
            {
                Onfirst_name_ownerChanging(value);
                ReportPropertyChanging("first_name_owner");
                _first_name_owner = StructuralObject.SetValidValue(value, false, "first_name_owner");
                ReportPropertyChanged("first_name_owner");
                Onfirst_name_ownerChanged();
            }
        }
        private global::System.String _first_name_owner;
        partial void Onfirst_name_ownerChanging(global::System.String value);
        partial void Onfirst_name_ownerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String middle_name_owner
        {
            get
            {
                return _middle_name_owner;
            }
            set
            {
                Onmiddle_name_ownerChanging(value);
                ReportPropertyChanging("middle_name_owner");
                _middle_name_owner = StructuralObject.SetValidValue(value, false, "middle_name_owner");
                ReportPropertyChanged("middle_name_owner");
                Onmiddle_name_ownerChanged();
            }
        }
        private global::System.String _middle_name_owner;
        partial void Onmiddle_name_ownerChanging(global::System.String value);
        partial void Onmiddle_name_ownerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_creation
        {
            get
            {
                return _date_of_creation;
            }
            set
            {
                Ondate_of_creationChanging(value);
                ReportPropertyChanging("date_of_creation");
                _date_of_creation = StructuralObject.SetValidValue(value, "date_of_creation");
                ReportPropertyChanged("date_of_creation");
                Ondate_of_creationChanged();
            }
        }
        private global::System.DateTime _date_of_creation;
        partial void Ondate_of_creationChanging(global::System.DateTime value);
        partial void Ondate_of_creationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String company_description
        {
            get
            {
                return _company_description;
            }
            set
            {
                Oncompany_descriptionChanging(value);
                ReportPropertyChanging("company_description");
                _company_description = StructuralObject.SetValidValue(value, true, "company_description");
                ReportPropertyChanged("company_description");
                Oncompany_descriptionChanged();
            }
        }
        private global::System.String _company_description;
        partial void Oncompany_descriptionChanging(global::System.String value);
        partial void Oncompany_descriptionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDatabaseModel", "FK__Company_p__id_co__571DF1D5", "Company_positions")]
        public EntityCollection<Company_positions> Company_positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company_positions>("EmployeeDatabaseModel.FK__Company_p__id_co__571DF1D5", "Company_positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company_positions>("EmployeeDatabaseModel.FK__Company_p__id_co__571DF1D5", "Company_positions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeDatabaseModel", Name="Company_positions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company_positions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Company_positions.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="name_position">Исходное значение свойства name_position.</param>
        /// <param name="salary_for_position">Исходное значение свойства salary_for_position.</param>
        /// <param name="description_position">Исходное значение свойства description_position.</param>
        /// <param name="id_company">Исходное значение свойства id_company.</param>
        public static Company_positions CreateCompany_positions(global::System.Int64 id, global::System.String name_position, global::System.Int32 salary_for_position, global::System.String description_position, global::System.Int64 id_company)
        {
            Company_positions company_positions = new Company_positions();
            company_positions.id = id;
            company_positions.name_position = name_position;
            company_positions.salary_for_position = salary_for_position;
            company_positions.description_position = description_position;
            company_positions.id_company = id_company;
            return company_positions;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name_position
        {
            get
            {
                return _name_position;
            }
            set
            {
                Onname_positionChanging(value);
                ReportPropertyChanging("name_position");
                _name_position = StructuralObject.SetValidValue(value, false, "name_position");
                ReportPropertyChanged("name_position");
                Onname_positionChanged();
            }
        }
        private global::System.String _name_position;
        partial void Onname_positionChanging(global::System.String value);
        partial void Onname_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 salary_for_position
        {
            get
            {
                return _salary_for_position;
            }
            set
            {
                Onsalary_for_positionChanging(value);
                ReportPropertyChanging("salary_for_position");
                _salary_for_position = StructuralObject.SetValidValue(value, "salary_for_position");
                ReportPropertyChanged("salary_for_position");
                Onsalary_for_positionChanged();
            }
        }
        private global::System.Int32 _salary_for_position;
        partial void Onsalary_for_positionChanging(global::System.Int32 value);
        partial void Onsalary_for_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description_position
        {
            get
            {
                return _description_position;
            }
            set
            {
                Ondescription_positionChanging(value);
                ReportPropertyChanging("description_position");
                _description_position = StructuralObject.SetValidValue(value, false, "description_position");
                ReportPropertyChanged("description_position");
                Ondescription_positionChanged();
            }
        }
        private global::System.String _description_position;
        partial void Ondescription_positionChanging(global::System.String value);
        partial void Ondescription_positionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_company
        {
            get
            {
                return _id_company;
            }
            set
            {
                Onid_companyChanging(value);
                ReportPropertyChanging("id_company");
                _id_company = StructuralObject.SetValidValue(value, "id_company");
                ReportPropertyChanged("id_company");
                Onid_companyChanged();
            }
        }
        private global::System.Int64 _id_company;
        partial void Onid_companyChanging(global::System.Int64 value);
        partial void Onid_companyChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDatabaseModel", "FK__Company_p__id_co__571DF1D5", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("EmployeeDatabaseModel.FK__Company_p__id_co__571DF1D5", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("EmployeeDatabaseModel.FK__Company_p__id_co__571DF1D5", "Company").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("EmployeeDatabaseModel.FK__Company_p__id_co__571DF1D5", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("EmployeeDatabaseModel.FK__Company_p__id_co__571DF1D5", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDatabaseModel", "FK__Employmen__id_po__5AEE82B9", "Employment_contracts")]
        public EntityCollection<Employment_contracts> Employment_contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employment_contracts>("EmployeeDatabaseModel.FK__Employmen__id_po__5AEE82B9", "Employment_contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employment_contracts>("EmployeeDatabaseModel.FK__Employmen__id_po__5AEE82B9", "Employment_contracts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeDatabaseModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Employee.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="last_name">Исходное значение свойства last_name.</param>
        /// <param name="first_name">Исходное значение свойства first_name.</param>
        /// <param name="middle_name">Исходное значение свойства middle_name.</param>
        /// <param name="gender">Исходное значение свойства gender.</param>
        /// <param name="age">Исходное значение свойства age.</param>
        /// <param name="details_passport">Исходное значение свойства details_passport.</param>
        /// <param name="date_of_birth">Исходное значение свойства date_of_birth.</param>
        /// <param name="country_of_birth">Исходное значение свойства country_of_birth.</param>
        public static Employee CreateEmployee(global::System.Int64 id, global::System.String last_name, global::System.String first_name, global::System.String middle_name, global::System.String gender, global::System.Int32 age, global::System.String details_passport, global::System.DateTime date_of_birth, global::System.String country_of_birth)
        {
            Employee employee = new Employee();
            employee.id = id;
            employee.last_name = last_name;
            employee.first_name = first_name;
            employee.middle_name = middle_name;
            employee.gender = gender;
            employee.age = age;
            employee.details_passport = details_passport;
            employee.date_of_birth = date_of_birth;
            employee.country_of_birth = country_of_birth;
            return employee;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false, "last_name");
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false, "first_name");
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String middle_name
        {
            get
            {
                return _middle_name;
            }
            set
            {
                Onmiddle_nameChanging(value);
                ReportPropertyChanging("middle_name");
                _middle_name = StructuralObject.SetValidValue(value, false, "middle_name");
                ReportPropertyChanged("middle_name");
                Onmiddle_nameChanged();
            }
        }
        private global::System.String _middle_name;
        partial void Onmiddle_nameChanging(global::System.String value);
        partial void Onmiddle_nameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, false, "gender");
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 age
        {
            get
            {
                return _age;
            }
            set
            {
                OnageChanging(value);
                ReportPropertyChanging("age");
                _age = StructuralObject.SetValidValue(value, "age");
                ReportPropertyChanged("age");
                OnageChanged();
            }
        }
        private global::System.Int32 _age;
        partial void OnageChanging(global::System.Int32 value);
        partial void OnageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String details_passport
        {
            get
            {
                return _details_passport;
            }
            set
            {
                Ondetails_passportChanging(value);
                ReportPropertyChanging("details_passport");
                _details_passport = StructuralObject.SetValidValue(value, false, "details_passport");
                ReportPropertyChanged("details_passport");
                Ondetails_passportChanged();
            }
        }
        private global::System.String _details_passport;
        partial void Ondetails_passportChanging(global::System.String value);
        partial void Ondetails_passportChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_birth
        {
            get
            {
                return _date_of_birth;
            }
            set
            {
                Ondate_of_birthChanging(value);
                ReportPropertyChanging("date_of_birth");
                _date_of_birth = StructuralObject.SetValidValue(value, "date_of_birth");
                ReportPropertyChanged("date_of_birth");
                Ondate_of_birthChanged();
            }
        }
        private global::System.DateTime _date_of_birth;
        partial void Ondate_of_birthChanging(global::System.DateTime value);
        partial void Ondate_of_birthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String country_of_birth
        {
            get
            {
                return _country_of_birth;
            }
            set
            {
                Oncountry_of_birthChanging(value);
                ReportPropertyChanging("country_of_birth");
                _country_of_birth = StructuralObject.SetValidValue(value, false, "country_of_birth");
                ReportPropertyChanged("country_of_birth");
                Oncountry_of_birthChanged();
            }
        }
        private global::System.String _country_of_birth;
        partial void Oncountry_of_birthChanging(global::System.String value);
        partial void Oncountry_of_birthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String residency
        {
            get
            {
                return _residency;
            }
            set
            {
                OnresidencyChanging(value);
                ReportPropertyChanging("residency");
                _residency = StructuralObject.SetValidValue(value, true, "residency");
                ReportPropertyChanged("residency");
                OnresidencyChanged();
            }
        }
        private global::System.String _residency;
        partial void OnresidencyChanging(global::System.String value);
        partial void OnresidencyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String number_phone
        {
            get
            {
                return _number_phone;
            }
            set
            {
                Onnumber_phoneChanging(value);
                ReportPropertyChanging("number_phone");
                _number_phone = StructuralObject.SetValidValue(value, true, "number_phone");
                ReportPropertyChanged("number_phone");
                Onnumber_phoneChanged();
            }
        }
        private global::System.String _number_phone;
        partial void Onnumber_phoneChanging(global::System.String value);
        partial void Onnumber_phoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDatabaseModel", "FK__Employmen__id_em__59FA5E80", "Employment_contracts")]
        public EntityCollection<Employment_contracts> Employment_contracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employment_contracts>("EmployeeDatabaseModel.FK__Employmen__id_em__59FA5E80", "Employment_contracts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employment_contracts>("EmployeeDatabaseModel.FK__Employmen__id_em__59FA5E80", "Employment_contracts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeDatabaseModel", Name="Employment_contracts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employment_contracts : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Employment_contracts.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="date_of_conclusion">Исходное значение свойства date_of_conclusion.</param>
        /// <param name="id_employee">Исходное значение свойства id_employee.</param>
        /// <param name="id_position">Исходное значение свойства id_position.</param>
        public static Employment_contracts CreateEmployment_contracts(global::System.Int64 id, global::System.DateTime date_of_conclusion, global::System.Int64 id_employee, global::System.Int64 id_position)
        {
            Employment_contracts employment_contracts = new Employment_contracts();
            employment_contracts.id = id;
            employment_contracts.date_of_conclusion = date_of_conclusion;
            employment_contracts.id_employee = id_employee;
            employment_contracts.id_position = id_position;
            return employment_contracts;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_of_conclusion
        {
            get
            {
                return _date_of_conclusion;
            }
            set
            {
                Ondate_of_conclusionChanging(value);
                ReportPropertyChanging("date_of_conclusion");
                _date_of_conclusion = StructuralObject.SetValidValue(value, "date_of_conclusion");
                ReportPropertyChanged("date_of_conclusion");
                Ondate_of_conclusionChanged();
            }
        }
        private global::System.DateTime _date_of_conclusion;
        partial void Ondate_of_conclusionChanging(global::System.DateTime value);
        partial void Ondate_of_conclusionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_employee
        {
            get
            {
                return _id_employee;
            }
            set
            {
                Onid_employeeChanging(value);
                ReportPropertyChanging("id_employee");
                _id_employee = StructuralObject.SetValidValue(value, "id_employee");
                ReportPropertyChanged("id_employee");
                Onid_employeeChanged();
            }
        }
        private global::System.Int64 _id_employee;
        partial void Onid_employeeChanging(global::System.Int64 value);
        partial void Onid_employeeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id_position
        {
            get
            {
                return _id_position;
            }
            set
            {
                Onid_positionChanging(value);
                ReportPropertyChanging("id_position");
                _id_position = StructuralObject.SetValidValue(value, "id_position");
                ReportPropertyChanged("id_position");
                Onid_positionChanged();
            }
        }
        private global::System.Int64 _id_position;
        partial void Onid_positionChanging(global::System.Int64 value);
        partial void Onid_positionChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDatabaseModel", "FK__Employmen__id_po__5AEE82B9", "Company_positions")]
        public Company_positions Company_positions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company_positions>("EmployeeDatabaseModel.FK__Employmen__id_po__5AEE82B9", "Company_positions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company_positions>("EmployeeDatabaseModel.FK__Employmen__id_po__5AEE82B9", "Company_positions").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company_positions> Company_positionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company_positions>("EmployeeDatabaseModel.FK__Employmen__id_po__5AEE82B9", "Company_positions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company_positions>("EmployeeDatabaseModel.FK__Employmen__id_po__5AEE82B9", "Company_positions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeDatabaseModel", "FK__Employmen__id_em__59FA5E80", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeDatabaseModel.FK__Employmen__id_em__59FA5E80", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeDatabaseModel.FK__Employmen__id_em__59FA5E80", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("EmployeeDatabaseModel.FK__Employmen__id_em__59FA5E80", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("EmployeeDatabaseModel.FK__Employmen__id_em__59FA5E80", "Employee", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
